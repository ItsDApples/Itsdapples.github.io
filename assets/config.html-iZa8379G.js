import{_ as n,c as a,f as e,o as l}from"./app-qXUnN9oq.js";const t={};function p(i,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h2 id="formal" tabindex="-1"><a class="header-anchor" href="#formal"><span>Formal</span></a></h2><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Color codes: &amp; + Minecraft color codes / &amp;# + Hex color codes</p><p>Use: \\n to change line</p></div><h3 id="placeholders" tabindex="-1"><a class="header-anchor" href="#placeholders"><span>Placeholders</span></a></h3><ul><li><p>{player} The event player</p></li><li><p>All PlaceholderAPI plugin&#39;s placeholder</p></li></ul><h2 id="structure" tabindex="-1"><a class="header-anchor" href="#structure"><span>Structure</span></a></h2><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token comment"># Event name</span></span>
<span class="line"><span class="token key atrule">FirstJoin</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token comment"># true/false</span></span>
<span class="line">  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">  <span class="token key atrule">message(The whole message while event happen)</span><span class="token punctuation">:</span> <span class="token string">&quot;&amp;7[&amp;#CCFFFF+&amp;7] &amp;f{player}&quot;</span></span>
<span class="line">  <span class="token key atrule">hoverTexts</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token string">&quot;Some example message&quot;</span></span>
<span class="line">  <span class="token key atrule">actions</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token string">&quot;[prefix] action&quot;</span></span>
<span class="line">  <span class="token comment"># Only first join config have this</span></span>
<span class="line">  <span class="token key atrule">welcomeRewards</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># true/false</span></span>
<span class="line">    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">    <span class="token comment"># if player say this word, he will get some rewards</span></span>
<span class="line">    <span class="token key atrule">keys</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;welcome&quot;</span></span>
<span class="line">    <span class="token key atrule">commands</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;give {player} diamond 3&quot;</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;tell {player} You received some rewards&quot;</span></span>
<span class="line">    <span class="token comment"># The message send to player.</span></span>
<span class="line">    <span class="token key atrule">message</span><span class="token punctuation">:</span> <span class="token string">&quot;&amp;#FFCCCC[Server] &amp;7You received some rewards!&quot;</span></span>
<span class="line">    <span class="token comment"># When the newbie join, other player can get rewards in this time limit</span></span>
<span class="line">    <span class="token key atrule">second</span><span class="token punctuation">:</span> <span class="token number">10</span> <span class="token comment">#(s)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)]))}const o=n(t,[["render",p],["__file","config.html.vue"]]),r=JSON.parse('{"path":"/plugins/joinopt/config.html","title":"Config","lang":"en-US","frontmatter":{"title":"Config"},"headers":[{"level":2,"title":"Formal","slug":"formal","link":"#formal","children":[{"level":3,"title":"Placeholders","slug":"placeholders","link":"#placeholders","children":[]}]},{"level":2,"title":"Structure","slug":"structure","link":"#structure","children":[]}],"git":{},"filePathRelative":"plugins/joinopt/config.md"}');export{o as comp,r as data};
